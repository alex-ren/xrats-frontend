{"input":"staload \"libats/SATS/intinf.sats\"\ndynload \"libats/DATS/intinf.dats\"\n\nfun fib (n:int) : Intinf = let\n    fun loop\n        (i:int, k1: Intinf, k2: Intinf)\n         :<cloref1> Intinf =\n        if i < n  then let\n           val k3 = k1+k2\n           val () = intinf_free(k1)\n         in loop(i+1,k2,k3) end\n        else let\n           val () = intinf_free(k2)\n        in k1 end\n    val f0 = intinf_make(0)\n    val f1 = intinf_make(1)\n    in loop(0, f0, f1) end\n\nimplement main () = let\n  val f = fib(1000)\n  val () = println! (\"f(1000) = \", f)\n  val () = intinf_free(f)\n  in end","compile_flags":["-lgmp"],"hashcode":"4357502322362128400","arch":"x86_64","filename":"foo","splat":[],"captures":["ats","compile"],"compiler":"ats","action":"compile"}